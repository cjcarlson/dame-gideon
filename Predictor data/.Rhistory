labels=c("A", "B", "C", "D"), nrow=2, ncol = 2)
plot2by2
model.poll <- nls(n.par~b*n.host^z,start = list(b = 1, z = 0.5),data=df.poll)
predicted.poll <- data.frame(pred = predict(model.poll), host = df.poll$n.host)
g1 <- ggplot(df.poll, aes(n.host, n.par)) + xlim(0,500) + ylim(0,1500) + xlab('Plants') + ylab('Pollinators') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .05, color = c('steelblue1')) + theme_bw() +
geom_line(color='black',lwd=1,data = predicted.poll, aes(x=host, y=pred))
model.disp <- nls(n.par~b*n.host^z,start = list(b = 1, z = 0.5),data=df.disp)
predicted.disp <- data.frame(pred = predict(model.disp), host = df.disp$n.host)
g2 <- ggplot(df.disp, aes(n.host, n.par)) + xlim(0,35) + ylim(0,100) + xlab('Plants') + ylab('Seed dispersers') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .05, color = c('red')) + theme_bw() +
geom_line(color='black',lwd=1,data = predicted.disp, aes(x=host, y=pred))
model.myco <- nls(n.par~b*n.host^z,start = list(b = 1, z = 0.5),data=df.myco)
predicted.myco <- data.frame(pred = predict(model.myco), host = df.myco$n.host)
g3 <- ggplot(df.myco, aes(n.host, n.par)) + xlim(0,85) + ylim(0,600) + xlab('Plants') + ylab('Microbe OTUs') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .05, color = c('orange')) + theme_bw() +
geom_line(color='black',lwd=1,data = predicted.myco, aes(x=host, y=pred))
model.helm <- nls(n.par~b*n.host^z,start = list(b = 1, z = 0.5),data=df.helm)
predicted.helm <- data.frame(pred = predict(model.helm), host = df.helm$n.host)
g4 <- ggplot(df.helm, aes(n.host, n.par)) + xlim(0,875) + ylim(0,2400) + xlab('Hosts') + ylab('Helminths') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .05, color = c('seagreen1')) + theme_bw() +
geom_line(color='black',lwd=1,data = predicted.helm, aes(x=host, y=pred))
plot2by2 <- plot_grid(g2, g3, g1, g4,
labels=c("A", "B", "C", "D"), nrow=2, ncol = 2)
plot2by2
plot_grid(plot2by2, g5, ncol=2, labels=c('','E'))
source('~/GitHub/brevity/other networks/cleaning and consolidating demo networks.R', echo=TRUE)
g5 <- ggplot(df.helm, aes(n.host, n.par)) + xlim(0,875) + ylim(0,3500) + xlab('Mammal hosts') + ylab('Nematode parasites') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .1, color = c('grey')) + theme_bw() +
geom_line(color='pink',lwd=1.1,data = predicted_10, aes(x=host, y=pred))+
geom_line(color='red',lwd=1.1,data = predicted_25, aes(x=host, y=pred))+
geom_line(color='purple',lwd=1.1,data = predicted_50, aes(x=host, y=pred))+
geom_line(color='blue',lwd=1.1,data = predicted_100, aes(x=host, y=pred))
plot_grid(plot2by2, g5, ncol=2, labels=c('','E'))
theme(plot.margin=unit(c(1,1,1.5,1.2)
source('~/GitHub/brevity/other networks/cleaning and consolidating demo networks.R', echo=TRUE)
g5 <- ggplot(df.helm, aes(n.host, n.par)) + xlim(0,875) + ylim(0,3500) + xlab('Mammal hosts') + ylab('Nematode parasites') +
g5 <- ggplot(df.helm, aes(n.host, n.par)) + xlim(0,875) + ylim(0,3500) + xlab('Mammal hosts') + ylab('Nematode parasites') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .1, color = c('grey')) + theme_bw() +
geom_line(color='pink',lwd=1.1,data = predicted_10, aes(x=host, y=pred))+
geom_line(color='red',lwd=1.1,data = predicted_25, aes(x=host, y=pred))+
geom_line(color='purple',lwd=1.1,data = predicted_50, aes(x=host, y=pred))+
geom_line(color='blue',lwd=1.1,data = predicted_100, aes(x=host, y=pred)) +theme(plot.margin=unit(c(1,1,1.5,1.2)))
g5 <- ggplot(df.helm, aes(n.host, n.par)) + xlim(0,875) + ylim(0,3500) + xlab('Mammal hosts') + ylab('Nematode parasites') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .1, color = c('grey')) + theme_bw() +
geom_line(color='pink',lwd=1.1,data = predicted_10, aes(x=host, y=pred))+
geom_line(color='red',lwd=1.1,data = predicted_25, aes(x=host, y=pred))+
geom_line(color='purple',lwd=1.1,data = predicted_50, aes(x=host, y=pred))+
geom_line(color='blue',lwd=1.1,data = predicted_100, aes(x=host, y=pred)) +theme(plot.margin=unit(c(1,1,1.5,1.2),unit=cm))
g5 <- ggplot(df.helm, aes(n.host, n.par)) + xlim(0,875) + ylim(0,3500) + xlab('Mammal hosts') + ylab('Nematode parasites') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .1, color = c('grey')) + theme_bw() +
geom_line(color='pink',lwd=1.1,data = predicted_10, aes(x=host, y=pred))+
geom_line(color='red',lwd=1.1,data = predicted_25, aes(x=host, y=pred))+
geom_line(color='purple',lwd=1.1,data = predicted_50, aes(x=host, y=pred))+
geom_line(color='blue',lwd=1.1,data = predicted_100, aes(x=host, y=pred)) +theme(plot.margin=c(1,1,1.5,1.2))
g5 <- ggplot(df.helm, aes(n.host, n.par)) + xlim(0,875) + ylim(0,3500) + xlab('Mammal hosts') + ylab('Nematode parasites') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .1, color = c('grey')) + theme_bw() +
geom_line(color='pink',lwd=1.1,data = predicted_10, aes(x=host, y=pred))+
geom_line(color='red',lwd=1.1,data = predicted_25, aes(x=host, y=pred))+
geom_line(color='purple',lwd=1.1,data = predicted_50, aes(x=host, y=pred))+
geom_line(color='blue',lwd=1.1,data = predicted_100, aes(x=host, y=pred)) +theme(unit(c(5.5, 5.5, 5.5, 5.5), "points"))
g5 <- ggplot(df.helm, aes(n.host, n.par)) + xlim(0,875) + ylim(0,3500) + xlab('Mammal hosts') + ylab('Nematode parasites') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .1, color = c('grey')) + theme_bw() +
geom_line(color='pink',lwd=1.1,data = predicted_10, aes(x=host, y=pred))+
geom_line(color='red',lwd=1.1,data = predicted_25, aes(x=host, y=pred))+
geom_line(color='purple',lwd=1.1,data = predicted_50, aes(x=host, y=pred))+
geom_line(color='blue',lwd=1.1,data = predicted_100, aes(x=host, y=pred)) +theme(unit(c(5.5, 5.5, 5.5, 5.5), "points"))
g5 <- ggplot(df.helm, aes(n.host, n.par)) + xlim(0,875) + ylim(0,3500) + xlab('Mammal hosts') + ylab('Nematode parasites') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .1, color = c('grey')) + theme_bw() +
geom_line(color='pink',lwd=1.1,data = predicted_10, aes(x=host, y=pred))+
geom_line(color='red',lwd=1.1,data = predicted_25, aes(x=host, y=pred))+
geom_line(color='purple',lwd=1.1,data = predicted_50, aes(x=host, y=pred))+
geom_line(color='blue',lwd=1.1,data = predicted_100, aes(x=host, y=pred)) +theme(unit(c(5.5, 5.5, 5.5, 5.5), "cm"))
g5 <- ggplot(df.helm, aes(n.host, n.par)) + xlim(0,875) + ylim(0,3500) + xlab('Mammal hosts') + ylab('Nematode parasites') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .1, color = c('grey')) + theme_bw() +
geom_line(color='pink',lwd=1.1,data = predicted_10, aes(x=host, y=pred))+
geom_line(color='red',lwd=1.1,data = predicted_25, aes(x=host, y=pred))+
geom_line(color='purple',lwd=1.1,data = predicted_50, aes(x=host, y=pred))+
geom_line(color='blue',lwd=1.1,data = predicted_100, aes(x=host, y=pred))
ggplot(df.helm, aes(n.host, n.par)) + xlim(0,875) + ylim(0,3500) + xlab('Mammal hosts') + ylab('Nematode parasites') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .1, color = c('grey')) + theme_bw() +
geom_line(color='pink',lwd=1.1,data = predicted_10, aes(x=host, y=pred))+
geom_line(color='red',lwd=1.1,data = predicted_25, aes(x=host, y=pred))+
geom_line(color='purple',lwd=1.1,data = predicted_50, aes(x=host, y=pred))+
geom_line(color='blue',lwd=1.1,data = predicted_100, aes(x=host, y=pred))
g5 <- ggplot(df.helm, aes(n.host, n.par)) + xlim(0,875) + ylim(0,3500) + xlab('Mammal hosts') + ylab('Nematode parasites') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .1, color = c('grey')) + theme_bw() +
geom_line(color='black',lwd=1.1,data = predicted_10, aes(x=host, y=pred))+
geom_line(color='black',lwd=1.1,data = predicted_25, aes(x=host, y=pred))+
geom_line(color='black',lwd=1.1,data = predicted_50, aes(x=host, y=pred))+
geom_line(color='blac',lwd=1.1,data = predicted_100, aes(x=host, y=pred)) +theme(unit(c(5.5, 5.5, 5.5, 5.5), "cm"))
plot_grid(plot2by2, g5, ncol=2, labels=c('','E'))
g5 <- ggplot(df.helm, aes(n.host, n.par)) + xlim(0,875) + ylim(0,3500) + xlab('Mammal hosts') + ylab('Nematode parasites') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .1, color = c('grey')) + theme_bw() +
geom_line(color='black',lwd=1.1,data = predicted_10, aes(x=host, y=pred))+
geom_line(color='black',lwd=1.1,data = predicted_25, aes(x=host, y=pred))+
geom_line(color='black',lwd=1.1,data = predicted_50, aes(x=host, y=pred))+
geom_line(color='black',lwd=1.1,data = predicted_100, aes(x=host, y=pred))
plot_grid(plot2by2, g5, ncol=2, labels=c('','E'))
g5 <- ggplot(df.helm, aes(n.host, n.par)) + xlim(0,875) + ylim(0,3500) + xlab('Mammal hosts') + ylab('Nematode parasites') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .1, color = c('grey')) + theme_bw() +
geom_line(color='black',lty='dotted',lwd=1.1,data = predicted_10, aes(x=host, y=pred))+
geom_line(color='black',lty='dashed',lwd=1.1,data = predicted_25, aes(x=host, y=pred))+
geom_line(color='black',lty='longdash',lwd=1.1,data = predicted_50, aes(x=host, y=pred))+
geom_line(color='black',lwd=1.1,data = predicted_100, aes(x=host, y=pred))
plot_grid(plot2by2, g5, ncol=2, labels=c('','E'))
g5 <- ggplot(df.helm, aes(n.host, n.par)) + xlim(0,900) + ylim(0,3500) + xlab('Mammal hosts') + ylab('Nematode parasites') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .1, color = c('grey')) + theme_bw() +
geom_line(color='black',lty='dotted',lwd=1.1,data = predicted_10, aes(x=host, y=pred))+
geom_line(color='black',lty='dashed',lwd=1.1,data = predicted_25, aes(x=host, y=pred))+
geom_line(color='black',lty='longdash',lwd=1.1,data = predicted_50, aes(x=host, y=pred))+
geom_line(color='black',lwd=1.1,data = predicted_100, aes(x=host, y=pred))
plot_grid(plot2by2, g5, ncol=2, labels=c('','E'))
model10
model25
model50
model100
model1
model.disp
model.myco
model.poll
model.helm
virus <- read.csv("~/Github/brevity/olival nature 2017/associations.csv")
virus <- virus[,c(2:1)]
names(virus) <- c('Host','Parasite')
virus <- virus[!(virus$Host %in% c('Homo_sapiens')),]
virus <- read.csv("~/Github/brevity/olival nature 2017/associations.csv")
head(virus)
virusmeta <- read.csv("~/Github/brevity/olival nature 2017/viruses.csv")
i=1
virus$zoonotic = 0
#### prop zoonotic
for (i in 1:nrow(virus)) {
virus$zoonotic[i] <- virusmeta[virusmeta$vVirusNameCorrected==virus$vVirusNameCorrected[i],]$IsZoonotic
}
head(virus)
hostmeta <- read.csv("~/Github/brevity/olival nature 2017/hosts.csv")
head(hostmeta)
virus$hostgroup = ''
virus$hostgroup[i] <- hostmeta[hostmeta$hHostNameFinal==virus$hHostNameFinal[i],]$hOrder
for (i in 1:nrow(virus)) {
virus$hostgroup[i] <- hostmeta[hostmeta$hHostNameFinal==virus$hHostNameFinal[i],]$hOrder
}
head(virus)
head(hosts
)
head(hostmeta)
for (i in 1:nrow(virus)) {
virus$hostgroup[i] <- hostmeta[hostmeta$hHostNameFinal==virus$hHostNameFinal[i],]$hOrder
}
head(virus)
virus$hostgroup <- c('')
for (i in 1:nrow(virus)) {
virus$hostgroup[i] <- hostmeta[hostmeta$hHostNameFinal==virus$hHostNameFinal[i],]$hOrder
}
head(virus)
i
hostmeta[hostmeta$hHostNameFinal==virus$hHostNameFinal[i],]$hOrder
virus$hostgroup <- as.character(virus$hostgroup)
for (i in 1:nrow(virus)) {
virus$hostgroup[i] <- as.character(hostmeta[hostmeta$hHostNameFinal==virus$hHostNameFinal[i],]$hOrder)
}
head(virus)
virus <- virus[,c(1,7,8)]
head(virus)
virus <- unique(virus)
head(virus)
table(virus$hostgroup,virus$zoonotic)
df <- table(virus$hostgroup,virus$zoonotic)
head(df)
df
df <- data.frame(df)
df
# Hello, world!
#
# This is an example function named 'hello'
# which prints 'Hello, world!'.
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Build and Reload Package:  'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
curve.df <- function(assoc.df, iter){
u.hosts <- unique(assoc.df[,1])
n.hosts <- length(u.hosts)
results.df <- data.frame(n.host=0,n.par=0)
results.df <- results.df[-1,]
for (i in 1:n.hosts) {
#for (i in 1:5) {
for (j in 1:iter) {
sub.hosts <- sample(u.hosts,i)
sub.df <- assoc.df[assoc.df[,1] %in% sub.hosts,]
u.par <- unique(sub.df[,2])
n.par <- length(u.par)
results.df[nrow(results.df)+1,] <- c(i, n.par)
}
#print(i)
}
return(results.df)
}
# binary network rarefaction
binera <- function(assoc.df, iter) {
c <- curve.df(assoc.df, iter)
model1 <- nls(n.par~b*n.host^z,start = list(b = 1, z = 0.5),data=c)
return(model1)
}
copredict <- function(n.indep, assoc.df, iter1, iter2) {
estlist <- c()
for (i in 1:iter1) {
q <- coef(binera(assoc.df, iter2))
est <- q["b"] * (n.indep)^(q["z"])
estlist <- c(estlist,est)
print(i)
}
est <- mean(estlist)
hist(estlist,main='Extrapolated estimates')
error <- qt(0.975,df=iter1-1)*sd(estlist)/sqrt(iter1)
lci <- est - 1.96*error
uci <- est + 1.96*error
print(paste(expression("Estimated number of species is"),est))
print(paste("The lower 95% CI is",lci))
print(paste("The upper 95% CI is",uci))
}
curve.50 <- function(assoc.df, iter){
hostlist <- unique(assoc.df[,1])
host.50 <- sample(hostlist, floor(length(hostlist)/2), replace = FALSE)
assoc.df <- assoc.df[assoc.df[,1] %in% host.50,]
u.hosts <- unique(assoc.df[,1])
n.hosts <- length(u.hosts)
results.df <- data.frame(n.host=0,n.par=0)
results.df <- results.df[-1,]
for (i in 1:n.hosts) {
#for (i in 1:5) {
for (j in 1:iter) {
sub.hosts <- sample(u.hosts,i)
sub.df <- assoc.df[assoc.df[,1] %in% sub.hosts,]
u.par <- unique(sub.df[,2])
n.par <- length(u.par)
results.df[nrow(results.df)+1,] <- c(i, n.par)
}
#print(i)
}
return(results.df)
}
binera.50 <-  function(assoc.df, iter) {
c <- curve.50(assoc.df, iter)
model1 <- nls(n.par~b*n.host^z,start = list(b = 1, z = 0.5),data=c)
return(model1)
}
copredict.ci <- function(n.indep, assoc.df, iter1, iter2) {
estlist <- c()
est100list <- c()
df <- data.frame(blist = c(0), zlist=c(0))
for (i in 1:iter1) {
q <- coef(binera.50(assoc.df, iter2))
est <- q["b"] * (n.indep)^(q["z"])
est.100 <- q["b"] * (length(unique(assoc.df[,1])))^q["z"]
df[i,] <- c(q["b"],q["z"])
estlist <- c(estlist,est)
est100list <- c(est100list,est.100)
print(i)
}
e2 <- elnorm(est100list, method = "mvue", ci = TRUE, ci.type = "two-sided",
ci.method = "exact", conf.level = 0.95)
est2 <- exp(e2$parameters[1])
lci2 <- exp(e2$interval$limits[1])
uci2 <- exp(e2$interval$limits[2])
print(paste(expression("True number of species in entire network is"),length(unique(assoc.df[,2]))))
print(paste(expression("Estimated number of species in entire network is"),est2))
print(paste("The lower 95% CI is",lci2))
print(paste("The upper 95% CI is",uci2))
par(mfrow=c(2,1))
hist(est100list,main='100% estimates')
hist(estlist,main='Extrapolated estimates')
e1 <- elnorm(estlist, method = "mvue", ci = TRUE, ci.type = "two-sided",
ci.method = "exact", conf.level = 0.95)
est <- exp(e1$parameters[1])
lci <- exp(e1$interval$limits[1])
uci <- exp(e1$interval$limits[2])
print(paste(expression("Extrapolated estimated number of species is"),est))
print(paste("The lower 95% CI is",lci))
print(paste("The upper 95% CI is",uci))
}
virus <- read.csv("~/Github/brevity/olival nature 2017/associations.csv")
virus <- virus[,c(2:1)]
names(virus) <- c('Host','Parasite')
virus <- virus[!(virus$Host %in% c('Homo_sapiens')),]
virusmeta <- read.csv("~/Github/brevity/olival nature 2017/viruses.csv")
dnalist <- unique(virusmeta[virusmeta$vDNAoRNA=='DNA',]$vVirusNameCorrected)
rnalist <- unique(virusmeta[virusmeta$vDNAoRNA=='RNA',]$vVirusNameCorrected)
rnavirus <- virus[virus$Parasite %in% rnalist,]
dnavirus <- virus[virus$Parasite %in% dnalist,]
df.virus <- curve.df(virus,100)
df.rna <- curve.df(rnavirus,100)
df.dna <- curve.df(dnavirus,100)
model.all <- nls(n.par~b*n.host^z,start = list(b = 1, z = 0.5),data=df.virus)
predicted.all <- data.frame(pred = predict(model.all), host = df.virus$n.host)
g1 <- ggplot(df.virus, aes(n.host, n.par)) + xlim(0,770) + ylim(0,530) + xlab('Mammals') + ylab('All viruses') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .05, color = c('mediumpurple1')) + theme_bw() +
geom_line(color='black',lwd=1,data = predicted.all, aes(x=host, y=pred))
g1
model.all
model.rna <- nls(n.par~b*n.host^z,start = list(b = 1, z = 0.5),data=df.rna)
predicted.rna <- data.frame(pred = predict(model.rna), host = df.rna$n.host)
g2 <- ggplot(df.rna, aes(n.host, n.par)) + xlim(0,740) + ylim(0,370) + xlab('Mammals') + ylab('RNA viruses') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .05, color = c('mediumorchid1')) + theme_bw() +
geom_line(color='black',lwd=1,data = predicted.rna, aes(x=host, y=pred))
g2
model.rna
model.dna <- nls(n.par~b*n.host^z,start = list(b = 1, z = 0.5),data=df.dna)
predicted.dna <- data.frame(pred = predict(model.dna), host = df.dna$n.host)
g3 <- ggplot(df.dna, aes(n.host, n.par)) + xlim(0,180) + ylim(0,170) + xlab('Mammals') + ylab('DNA viruses') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .05, color = c('slateblue1')) + theme_bw() +
geom_line(color='black',lwd=1,data = predicted.dna, aes(x=host, y=pred))
g3
model.dna
plot1 <- plot_grid(g1, g2, g3,
labels=c("A", "B", "C"), nrow=1, ncol = 3)
plot2 <- plot_grid(NULL, NULL,
labels=c("D", "E"), nrow=1, ncol = 2)
plot3 <- plot_grid(blank, blank, nrow=1, ncol = 2)
plot_grid(plot1,plot2,plot2,nrow=3)
library(ggplot2)
library(cowplot)
g1
g1 <- ggplot(df.virus, aes(n.host, n.par)) + xlim(0,770) + ylim(0,530) + xlab('Mammals') + ylab('All viruses') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .05, color = c('mediumpurple1')) + theme_bw() +
geom_line(color='black',lwd=1,data = predicted.all, aes(x=host, y=pred))
g1
model.all
g2 <- ggplot(df.rna, aes(n.host, n.par)) + xlim(0,740) + ylim(0,370) + xlab('Mammals') + ylab('RNA viruses') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .05, color = c('mediumorchid1')) + theme_bw() +
geom_line(color='black',lwd=1,data = predicted.rna, aes(x=host, y=pred))
g2
model.rna
g3 <- ggplot(df.dna, aes(n.host, n.par)) + xlim(0,180) + ylim(0,170) + xlab('Mammals') + ylab('DNA viruses') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .05, color = c('slateblue1')) + theme_bw() +
geom_line(color='black',lwd=1,data = predicted.dna, aes(x=host, y=pred))
g3
model.dna
plot1 <- plot_grid(g1, g2, g3,
labels=c("A", "B", "C"), nrow=1, ncol = 3)
plot2 <- plot_grid(NULL, NULL,
labels=c("D", "E"), nrow=1, ncol = 2)
plot2
plot_grid(plot1,plot2,plot2,nrow=3)
plot1
model.all
model.rna
model.dna
virus <- read.csv("~/Github/brevity/olival nature 2017/associations.csv")
virus <- virus[,c(2:1)]
names(virus) <- c('Host','Parasite')
df.virus <- curve.df(virus,100)
g1 <- ggplot(df.virus, aes(n.host, n.par)) + xlim(0,770) + ylim(0,530) + xlab('Mammals') + ylab('All viruses') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .05, color = c('mediumpurple1')) + theme_bw() +
geom_line(color='black',lwd=1,data = predicted.all, aes(x=host, y=pred))
g1
g1 <- ggplot(df.virus, aes(n.host, n.par)) + xlim(0,775) + ylim(0,650) + xlab('Mammals') + ylab('All viruses') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .05, color = c('mediumpurple1')) + theme_bw() +
geom_line(color='black',lwd=1,data = predicted.all, aes(x=host, y=pred))
g1
model.all <- nls(n.par~b*n.host^z,start = list(b = 1, z = 0.5),data=df.virus)
predicted.all <- data.frame(pred = predict(model.all), host = df.virus$n.host)
g1 <- ggplot(df.virus, aes(n.host, n.par)) + xlim(0,775) + ylim(0,650) + xlab('Mammals') + ylab('All viruses') +
geom_point(shape = 16, size = 2.5, show.legend = FALSE, alpha = .05, color = c('mediumpurple1')) + theme_bw() +
geom_line(color='black',lwd=1,data = predicted.all, aes(x=host, y=pred))
g1
model.all
library(raster)
r1 <- raster(file.choose())
r2 <- raster(file.choose())
plot(r1)
plot(r2)
plot(r2-r1)
writeRaster(r2-r1, 'C:/Users/ccarlson/Dropbox/ZikaRecoil/Figures/')
writeRaster(r2-r1, 'C:/Users/ccarlson/Dropbox/ZikaRecoil/Figures/2685difference.grd')
writeRaster(r2-r1, 'C:/Users/ccarlson/Dropbox/ZikaRecoil2018/Figures/2685difference.grd')
clipper <- raster("file:///C:/Users/ccarlson/Dropbox/ZikaRecoil2018/Figures/Figure 3 - RCP 8.5/RCP26.grd")
clipper <- raster("C:/Users/ccarlson/Dropbox/ZikaRecoil2018/Figures/Figure 3 - RCP 8.5/RCP26.grd")
plot(clipper)
plot((clipper+1)/(clipper+1))
r3 <- r2-r1+clipper-clipper
plot(r3)
clipper
r3 <- r2-r1
r3
clipper <- resample(clipper,r3)
clipper
r3 <- r3+clipper-clipper
plot(r3)
writeRaster(r3, 'C:/Users/ccarlson/Dropbox/ZikaRecoil2018/Figures/2685difference.grd',overwrite=TRUE)
View(r2)
library(taxize)
iucn_summary("Lutra lutra")
iucn_summary_id("Lutra lutra")
setwd('C:/Users/cjcar/Github/dame-gideon/')
setwd('C:/Users/ccarlson/Github/dame-gideon/')
setwd('C:/Users/ccarlson/Documents/Github/dame-gideon/')
read.csv('mosquito-uncleaned.csv')
read.csv('mosquito-unformatted.csv')
setwd('C:/Users/ccarlson/Documents/Github/dame-gideon/Predictor data')
read.csv('mosquito-unformatted.csv')
test <- read.csv('mosquito-unformatted.csv')
head(test)
View(test)
test <- read.csv('mosquito-unformatted.csv',header = FALSE)
head(test)
test[,2] <- ''
nrow(test)
(nrow(test)/2)
test[i,2] <- test[i+1,1]
for(i in 1:(nrow(test)/2)){
test[i,2] <- test[i+1,1]
}
setwd('C:/Users/ccarlson/Documents/Github/dame-gideon/Predictor data')
test <- read.csv('mosquito-unformatted.csv',header = FALSE)
test[,2] <- 'blorp'
for(i in 1:(nrow(test)/2)){
test[i,2] <- test[i+1,1]
}
test[,2] <- as.character(test[,2])
for(i in 1:(nrow(test)/2)){
test[i,2] <- test[i+1,1]
}
test[1,2]
test[1,1]
test[2,1]
for(i in 1:(nrow(test)/2)){
test[i,2] <- as.character(test[2*i,1])
}
test[c(1:(nrow(test/2)))*2-1,]
c(1:(nrow(test/2)))*2-1
c(1:(nrow(test)/2))*2-1
source('~/GitHub/dame-gideon/Predictor data/mosquito-formatting.R', echo=TRUE)
setwd('C:/Users/ccarlson/Documents/Github/dame-gideon/Predictor data')
test <- read.csv('mosquito-unformatted.csv',header = FALSE)
test[,2] <- 'blorp'
test[,2] <- as.character(test[,2])
for(i in 1:(nrow(test)/2)){
test[i,2] <- as.character(test[2*i,1])
}
test[2*i,2] <- as.character(test[2*i,1])
for(i in 1:(nrow(test)/2)){
test[2*i,2] <- as.character(test[2*i,1])
}
setwd('C:/Users/ccarlson/Documents/Github/dame-gideon/Predictor data')
test <- read.csv('mosquito-unformatted.csv',header = FALSE)
test[,2] <- 'blorp'
test[,2] <- as.character(test[,2])
for(i in 1:(nrow(test)/2)){
test[2*i,2] <- as.character(test[2*i,1])
}
source('~/GitHub/dame-gideon/Predictor data/mosquito-formatting.R', echo=TRUE)
head(test)
View(test)
test2 <- test[0,]
test3
test2
test2 <- test[0,]
i=1
str_split(test$V2[i])
library("stringr")
str_split(test$V2[i])
str_split(test$V2[i],";")
list <- str_split(test$V2[i],";")[[1]]
list <- list[1:(length(list)-1)]
list
ticker=0
i=1
list <- str_split(test$V2[i],";")[[1]]
list <- list[1:(length(list)-1)]
for (j in 1:length(list)) {
test2[ticker,] <- c(test$V1[i],list[j])
ticker <- ticker+1
}
ticker
test2
list <- str_split(test$V2[i],";")[[1]]
list <- list[1:(length(list)-1)]
j=1
test2[ticker,] <- c(test$V1[i],list[j])
ticker <- ticker+1
c(test$V1[i],list[j])
c(as.character(test$V1[i]),list[j])
library(stringr)
setwd('C:/Users/ccarlson/Documents/Github/dame-gideon/Predictor data')
test <- read.csv('mosquito-unformatted.csv',header = FALSE)
test[,2] <- 'blorp'
test[,2] <- as.character(test[,2])
for(i in 1:(nrow(test)/2)){
test[2*i-1,2] <- as.character(test[2*i,1])
}
test <- test[c(1:(nrow(test)/2))*2-1,]
test2 <- test[1,]
ticker=1
for (i in 1:length(test$V1)) {
list <- str_split(test$V2[i],";")[[1]]
list <- list[1:(length(list)-1)]
for (j in 1:length(list)) {
test2[ticker,] <- c(as.character(test$V1[i]),list[j])
ticker <- ticker+1
}
}
test2
View(test2)
write.csv(test2, 'mosquito-formatted.csv')
